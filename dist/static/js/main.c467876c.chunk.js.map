{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","messageRef","collection","query","orderBy","limitToLast","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","dummy","useRef","useEffect","current","scrollIntoView","behavior","map","msg","ChatMessage","key","id","message","ref","onSubmit","value","onChange","target","placeholder","type","disabled","messageClass","src","App","useAuthState","user","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAUAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YAwB3B,SAASC,IAOP,OACE,4BAAQC,UAAU,UAAUC,QANL,WACvB,IAAMC,EAAW,IAAIf,IAASU,KAAKM,mBACnCN,EAAKO,gBAAgBF,KAIrB,uBAIJ,SAASG,IACP,OAAOR,EAAKS,aACV,4BAAQL,QAAS,kBAAMJ,EAAKU,YAA5B,YAIJ,SAASC,IACP,IAAMC,EAAaX,EAAUY,WAAW,YAClCC,EAAQF,EAAWG,QAAQ,aAAaC,YAAY,IAFxC,EAICC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EAJW,sBAMgBC,mBAAS,IANzB,mBAMXC,EANW,KAMAC,EANA,KAQZC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ1B,EAAKS,YAAvBkB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZhB,EAAWiB,IAAI,CACnBC,KAAMT,EACNU,UAAWzC,IAASW,UAAU+B,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IAZK,2CAAH,sDAeXY,EAAQC,mBAMd,OAJAC,qBAAU,WACRF,EAAMG,QAAQC,eAAe,CAACC,SAAU,aACvC,CAACpB,IAGF,oCACE,8BACGA,GAAYA,EAASqB,KAAI,SAAAC,GAAG,OAAI,kBAACC,EAAD,CAAaC,IAAKF,EAAIG,GAAIC,QAASJ,OACpE,0BAAMK,IAAKZ,KAGb,0BAAMa,SAAUxB,GACd,2BAAOyB,MAAO3B,EAAW4B,SAAU,SAACzB,GAAD,OAAOF,EAAaE,EAAE0B,OAAOF,QAAQG,YAAY,iBACpF,4BAAQC,KAAK,SAASC,UAAWhC,GAAjC,WAMR,SAASqB,EAAT,GAAmC,IAAZG,EAAW,EAAXA,QACbf,EAAwBe,EAAxBf,KAAMH,EAAkBkB,EAAlBlB,IAAKC,EAAaiB,EAAbjB,SAEb0B,EAAe3B,IAAQ3B,EAAKS,YAAYkB,IAAM,OAAS,WAE7D,OACE,oCACE,yBAAKxB,UAAS,kBAAamD,IACzB,yBAAKC,IAAK3B,GAAY,0DACtB,2BAAIE,KAMG0B,MAnGf,WAAgB,IAAD,EAEEC,YAAazD,GAArB0D,EAFM,oBAIb,OACE,yBAAKvD,UAAU,OACb,gCACE,0CACA,kBAACK,EAAD,OAGF,iCACGkD,EAAO,kBAAC/C,EAAD,MAAe,kBAACT,EAAD,MACtBwD,EAAO,GACZ,uBAAGvD,UAAU,UAAb,oBAAuC,uBAAGwD,KAAK,iCAAiCT,OAAO,UAAhD,gBCjC3CU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c467876c.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport './index.css'\n\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBQGJ2K0y-CiSW56M5CKtQ3BSVwDrRR1YM\",\n  authDomain: \"rogasper-rechatapp.firebaseapp.com\",\n  databaseURL: \"https://rogasper-rechatapp.firebaseio.com\",\n  projectId: \"rogasper-rechatapp\",\n  storageBucket: \"rogasper-rechatapp.appspot.com\",\n  messagingSenderId: \"168580904089\",\n  appId: \"1:168580904089:web:cfa63c5956371ea8377408\",\n  measurementId: \"G-3C406Z6Q08\"\n})\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Rechat App</h1>\n        <SignOut/>\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n        {user ? '' : \n    <p className=\"credit\">Aplikasi Chat by <a href=\"https://instagram.com/rogasper\" target=\"_blank\">Rogasper</a></p>}\n      </section>\n\n\n    </div>\n    )\n}\n\nfunction SignIn(){\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider()\n    auth.signInWithPopup(provider)\n  }\n\n  return (\n    <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const messageRef = firestore.collection('messages')\n  const query = messageRef.orderBy('createdAt').limitToLast(25)\n\n  const [messages] = useCollectionData(query, {idField: 'id'});\n\n  const [formValue, setFormValue] = useState('')\n\n  const sendMessage = async (e) => {\n    e.preventDefault()\n\n    const { uid, photoURL } = auth.currentUser\n\n    await messageRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('')\n  }\n\n  const dummy = useRef()\n\n  useEffect(() => {\n    dummy.current.scrollIntoView({behavior: 'smooth'})\n  }, [messages])\n\n  return(\n    <>\n      <main>\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n        <span ref={dummy}></span>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Katakan Halo\"/>\n        <button type=\"submit\" disabled={!formValue}>Kirim</button>\n      </form>\n    </>\n  )\n}\n\nfunction ChatMessage({ message }) {\n  const { text, uid, photoURL } = message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return(\n    <>\n      <div className={`message ${messageClass}`}>\n        <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'}/>\n        <p>{text}</p>\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}